#!/bin/bash

echo "üîç KI·ªÇM TRA D·ª∞ √ÅN TR∆Ø·ªöC KHI DEPLOY"
echo "=================================="
echo ""

# Check required files
echo "üìÅ Ki·ªÉm tra files c·∫ßn thi·∫øt..."
files=("Procfile" "composer.json" "package.json" ".env.example" "vite.config.ts")
all_files_exist=true

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file - THI·∫æU!"
        all_files_exist=false
    fi
done
echo ""

# Check Laravel files
echo "üèóÔ∏è Ki·ªÉm tra Laravel files..."
laravel_files=(
    "app/Models/Reservation.php"
    "app/Http/Controllers/ReservationController.php"
    "routes/web.php"
    "database/migrations/2024_10_07_000000_create_reservations_table.php"
)

for file in "${laravel_files[@]}"; do
    if [ -f "$file" ]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file - THI·∫æU!"
        all_files_exist=false
    fi
done
echo ""

# Check React pages
echo "üé® Ki·ªÉm tra React pages..."
react_files=(
    "resources/js/pages/Reservations/Index.tsx"
    "resources/js/pages/Reservations/Form.tsx"
)

for file in "${react_files[@]}"; do
    if [ -f "$file" ]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file - THI·∫æU!"
        all_files_exist=false
    fi
done
echo ""

# Check if build works
echo "üî® Test build assets..."
if npm run build > /dev/null 2>&1; then
    echo "  ‚úÖ Build th√†nh c√¥ng"
else
    echo "  ‚ùå Build TH·∫§T B·∫†I - Ki·ªÉm tra l·ªói!"
fi
echo ""

# Check if manifest exists
if [ -f "public/build/manifest.json" ]; then
    echo "  ‚úÖ Manifest.json ƒë√£ t·∫°o"
else
    echo "  ‚ùå Manifest.json kh√¥ng t·ªìn t·∫°i"
fi
echo ""

# Check composer dependencies
echo "üì¶ Ki·ªÉm tra dependencies..."
if [ -d "vendor" ]; then
    echo "  ‚úÖ Vendor folder exists"
else
    echo "  ‚ö†Ô∏è  Vendor folder kh√¥ng t·ªìn t·∫°i - Ch·∫°y: composer install"
fi

if [ -d "node_modules" ]; then
    echo "  ‚úÖ Node_modules exists"
else
    echo "  ‚ö†Ô∏è  Node_modules kh√¥ng t·ªìn t·∫°i - Ch·∫°y: npm install"
fi
echo ""

# Check .env
echo "‚öôÔ∏è Ki·ªÉm tra .env..."
if [ -f ".env" ]; then
    echo "  ‚úÖ .env exists"

    # Check important variables
    if grep -q "APP_KEY=base64:" .env; then
        echo "  ‚úÖ APP_KEY ƒë√£ ƒë∆∞·ª£c generate"
    else
        echo "  ‚ö†Ô∏è  APP_KEY ch∆∞a generate - Ch·∫°y: php artisan key:generate"
    fi

    if grep -q "DB_CONNECTION=" .env; then
        echo "  ‚úÖ DB_CONNECTION configured"
    else
        echo "  ‚ö†Ô∏è  DB_CONNECTION ch∆∞a c·∫•u h√¨nh"
    fi
else
    echo "  ‚ö†Ô∏è  .env kh√¥ng t·ªìn t·∫°i - Copy t·ª´ .env.example"
fi
echo ""

# Summary
echo "=================================="
if [ "$all_files_exist" = true ]; then
    echo "‚úÖ T·∫§T C·∫¢ FILES C·∫¶N THI·∫æT ƒê√É C√ì!"
    echo ""
    echo "üöÄ D·ª∞ √ÅN S·∫¥N S√ÄNG DEPLOY L√äN ZEABUR!"
    echo ""
    echo "C√°c b∆∞·ªõc ti·∫øp theo:"
    echo "1. git add ."
    echo "2. git commit -m 'Ready for deployment'"
    echo "3. git push origin main"
    echo "4. Deploy tr√™n Zeabur: https://zeabur.com"
else
    echo "‚ùå C√íN THI·∫æU M·ªòT S·ªê FILES!"
    echo "Ki·ªÉm tra l·∫°i c√°c files b·ªã thi·∫øu ·ªü tr√™n."
fi
echo "=================================="
